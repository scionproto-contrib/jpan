// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: google/protobuf/empty.proto
// Protobuf Java Version: 4.28.2

package com.google.protobuf;

/** Protobuf type {@code google.protobuf.Empty} */
public final class Empty extends GeneratedMessage
    implements
    // @@protoc_insertion_point(message_implements:google.protobuf.Empty)
    EmptyOrBuilder {
  private static final long serialVersionUID = 0L;

  static {
    RuntimeVersion.validateProtobufGencodeVersion(
        RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        Empty.class.getName());
  }

  // Use Empty.newBuilder() to construct.
  private Empty(GeneratedMessage.Builder<?> builder) {
    super(builder);
  }

  private Empty() {}

  public static final Descriptors.Descriptor getDescriptor() {
    return EmptyProto.internal_static_google_protobuf_Empty_descriptor;
  }

  @Override
  protected FieldAccessorTable internalGetFieldAccessorTable() {
    return EmptyProto.internal_static_google_protobuf_Empty_fieldAccessorTable
        .ensureFieldAccessorsInitialized(Empty.class, Builder.class);
  }

  private byte memoizedIsInitialized = -1;

  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(CodedOutputStream output) throws java.io.IOException {
    getUnknownFields().writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof Empty)) {
      return super.equals(obj);
    }
    Empty other = (Empty) obj;

    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static Empty parseFrom(java.nio.ByteBuffer data) throws InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static Empty parseFrom(java.nio.ByteBuffer data, ExtensionRegistryLite extensionRegistry)
      throws InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static Empty parseFrom(ByteString data) throws InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static Empty parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry)
      throws InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static Empty parseFrom(byte[] data) throws InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static Empty parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry)
      throws InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static Empty parseFrom(java.io.InputStream input) throws java.io.IOException {
    return GeneratedMessage.parseWithIOException(PARSER, input);
  }

  public static Empty parseFrom(java.io.InputStream input, ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return GeneratedMessage.parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static Empty parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
    return GeneratedMessage.parseDelimitedWithIOException(PARSER, input);
  }

  public static Empty parseDelimitedFrom(
      java.io.InputStream input, ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return GeneratedMessage.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }

  public static Empty parseFrom(CodedInputStream input) throws java.io.IOException {
    return GeneratedMessage.parseWithIOException(PARSER, input);
  }

  public static Empty parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return GeneratedMessage.parseWithIOException(PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(Empty prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }

  /** Protobuf type {@code google.protobuf.Empty} */
  public static final class Builder extends GeneratedMessage.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.protobuf.Empty)
      EmptyOrBuilder {
    public static final Descriptors.Descriptor getDescriptor() {
      return EmptyProto.internal_static_google_protobuf_Empty_descriptor;
    }

    @Override
    protected FieldAccessorTable internalGetFieldAccessorTable() {
      return EmptyProto.internal_static_google_protobuf_Empty_fieldAccessorTable
          .ensureFieldAccessorsInitialized(Empty.class, Builder.class);
    }

    // Construct using com.google.protobuf.Empty.newBuilder()
    private Builder() {}

    private Builder(BuilderParent parent) {
      super(parent);
    }

    @Override
    public Builder clear() {
      super.clear();
      return this;
    }

    @Override
    public Descriptors.Descriptor getDescriptorForType() {
      return EmptyProto.internal_static_google_protobuf_Empty_descriptor;
    }

    @Override
    public Empty getDefaultInstanceForType() {
      return Empty.getDefaultInstance();
    }

    @Override
    public Empty build() {
      Empty result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public Empty buildPartial() {
      Empty result = new Empty(this);
      onBuilt();
      return result;
    }

    @Override
    public Builder mergeFrom(Message other) {
      if (other instanceof Empty) {
        return mergeFrom((Empty) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(Empty other) {
      if (other == Empty.getDefaultInstance()) return this;
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    // @@protoc_insertion_point(builder_scope:google.protobuf.Empty)
  }

  // @@protoc_insertion_point(class_scope:google.protobuf.Empty)
  private static final Empty DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new Empty();
  }

  public static Empty getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final Parser<Empty> PARSER =
      new AbstractParser<Empty>() {
        @Override
        public Empty parsePartialFrom(
            CodedInputStream input, ExtensionRegistryLite extensionRegistry)
            throws InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static Parser<Empty> parser() {
    return PARSER;
  }

  @Override
  public Parser<Empty> getParserForType() {
    return PARSER;
  }

  @Override
  public Empty getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
